spring:
  profiles:
    active: development
server:
  port: 8865
---
spring:
  profiles: development
  cloud:
    stream:
      bindings:
        warehouse:
          contentType: 'application/json'
          destination: warehouse
          group: warehouse-group
          consumer:
            durableSubscription: true
            concurrency: 5
        reservation:
          contentType: 'application/json'
          destination: reservation
          group: reservation-group
          consumer:
            durableSubscription: true
            concurrency: 5
        inventory:
          contentType: 'application/json'
          destination: inventory
          group: inventory-group
          consumer:
            durableSubscription: true
            concurrency: 5
---
spring:
  profiles: docker
  sleuth:
    trace-id128: true
    sampler:
      probability: 1.0
    propagation-keys: user_name
  zipkin:
      base-url: http://my-zipkin-collector.default.svc.cluster.local:9411
      enabled: true
  cloud:
    stream:
      kafka:
        binder:
          brokers: ${IP_KAFKA:mykafka-v1.default.svc.cluster.local:9092}
      bindings:
        warehouse:
          contentType: 'application/json'
          destination: warehouse
          group: warehouse-group
          consumer:
            durableSubscription: true
            concurrency: 20
        reservation:
          contentType: 'application/json'
          destination: reservation
          group: reservation-group
          consumer:
            durableSubscription: true
            concurrency: 20
        inventory:
          contentType: 'application/json'
          destination: inventory
          group: inventory-group
          consumer:
            durableSubscription: true
            concurrency: 20
eureka:
  client:
    service-url:
      defaultZone: http://${IP_EUREKA:eureka-0.eureka}:8761/eureka
    registryFetchIntervalSeconds: 5
  instance:
    hostname: ${IP_EUREKA:eureka-0.eureka}
    instance-id: ${spring.application.name}:${random.int}
    leaseRenewalIntervalInSeconds: 5
---
spring:
  profiles: test
eureka:
  client:
    enabled: false
logging:
  level:
    org:
      apache:
        zookeeper:
          ZooKeeper: error
    org.apache.kafka.clients.producer.ProducerConfig: error
---
spring:
  profiles: cloud
  cloud:
    stream:
      bindings:
        warehouse:
          contentType: 'application/json'
          destination: warehouse
          group: warehouse-group
          consumer:
            durableSubscription: true
            concurrency: 5
        reservation:
          contentType: 'application/json'
          destination: reservation
          group: reservation-group
          consumer:
            durableSubscription: true
            concurrency: 5
        inventory:
          contentType: 'application/json'
          destination: inventory
          group: inventory-group
          consumer:
            durableSubscription: true
            concurrency: 5
eureka:
  instance:
    hostname: ${vcap.application.uris[0]:localhost}
    nonSecurePort: 80
    metadataMap:
      instanceId: ${vcap.application.instance_id:${spring.application.name}:${spring.application.instance_id:${server.port}}}
    leaseRenewalIntervalInSeconds: 5
  client:
    region: default
    registryFetchIntervalSeconds: 5
    serviceUrl:
      defaultZone: ${vcap.services.discovery-service.credentials.uri:http://localhost:8761}/eureka/